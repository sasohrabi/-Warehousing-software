<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmddate.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="shamsi.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAApQEAAAIB
        AAAAAQAAAAAAAAAAAAAAAJABAACTsgAAkAEAAAMACAAL8ldHIAAAAF8AZQB4AHQAZQBuAHQAeABFCAAA
        AwAIAAryV0cgAAAAXwBlAHgAdABlAG4AdAB5AMIBAAANAAQAdfMNvEAAAABmAG8AbgB0AANS4wuRj84R
        neMAqgBLuFEBAAAAvAJ0twEAD1RpbWVzIE5ldyBSb21hbgAACAAIALtXVrNAAAAAZgBvAG4AdABuAGEA
        bQBlAA8AAABUAGkAbQBlAHMAIABOAGUAdwAgAFIAbwBtAGEAbgAAAAQACAA7uVSTIAAAAGYAbwBuAHQA
        cwBpAHoAZQAAADRBCAAGAIFZHaIwAAAAdABhAHIAaQBrAGgACgAAADEAMwA4ADYALwAwADcALwAxADIA
        CAAEAHvZDbwcAAAAcgBvAG8AegACAAAAMQAyAAgAAwBpIAy0HAAAAG0AYQBoAAIAAAAwADcAAAAIAAMA
        bSAMzCAAAABzAGEAbAAEAAAAMQAzADgANgAAAAgABgCx2d26mP7//2UAbQByAG8AbwB6AAEAAAA1AAAA
        Cw==
</value>
  </data>
</root>